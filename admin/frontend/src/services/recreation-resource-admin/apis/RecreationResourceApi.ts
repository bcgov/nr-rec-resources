/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC Admin API
 * RST Admin API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
  BadRequestResponseDto,
  SuggestionsResponseDto,
} from "../models/index";
import {
  BadRequestResponseDtoFromJSON,
  BadRequestResponseDtoToJSON,
  SuggestionsResponseDtoFromJSON,
  SuggestionsResponseDtoToJSON,
} from "../models/index";

export interface GetRecreationResourceSuggestionsRequest {
  searchTerm: string;
}

/**
 *
 */
export class RecreationResourceApi extends runtime.BaseAPI {
  /**
   *
   */
  async getRecreationResourceSuggestionsRaw(
    requestParameters: GetRecreationResourceSuggestionsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SuggestionsResponseDto>> {
    if (requestParameters["searchTerm"] == null) {
      throw new runtime.RequiredError(
        "searchTerm",
        'Required parameter "searchTerm" was null or undefined when calling getRecreationResourceSuggestions().',
      );
    }

    const queryParameters: any = {};

    if (requestParameters["searchTerm"] != null) {
      queryParameters["searchTerm"] = requestParameters["searchTerm"];
    }

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token("keycloak", []);

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/api/recreation-resource/suggestions`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      SuggestionsResponseDtoFromJSON(jsonValue),
    );
  }

  /**
   *
   */
  async getRecreationResourceSuggestions(
    requestParameters: GetRecreationResourceSuggestionsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SuggestionsResponseDto> {
    const response = await this.getRecreationResourceSuggestionsRaw(
      requestParameters,
      initOverrides,
    );
    return await response.value();
  }
}
