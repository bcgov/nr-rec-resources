/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC Admin API
 * RST Admin API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface PresignedUploadControllerCompleteDirectUploadV1200Response
 */
export interface PresignedUploadControllerCompleteDirectUploadV1200Response {
  /**
   *
   * @type {boolean}
   * @memberof PresignedUploadControllerCompleteDirectUploadV1200Response
   */
  success?: boolean;
  /**
   * DAM document ID (ref_id)
   * @type {string}
   * @memberof PresignedUploadControllerCompleteDirectUploadV1200Response
   */
  documentId?: string;
  /**
   * Processed file size in bytes
   * @type {number}
   * @memberof PresignedUploadControllerCompleteDirectUploadV1200Response
   */
  fileSize?: number;
}

/**
 * Check if a given object implements the PresignedUploadControllerCompleteDirectUploadV1200Response interface.
 */
export function instanceOfPresignedUploadControllerCompleteDirectUploadV1200Response(
  value: object,
): value is PresignedUploadControllerCompleteDirectUploadV1200Response {
  return true;
}

export function PresignedUploadControllerCompleteDirectUploadV1200ResponseFromJSON(
  json: any,
): PresignedUploadControllerCompleteDirectUploadV1200Response {
  return PresignedUploadControllerCompleteDirectUploadV1200ResponseFromJSONTyped(
    json,
    false,
  );
}

export function PresignedUploadControllerCompleteDirectUploadV1200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PresignedUploadControllerCompleteDirectUploadV1200Response {
  if (json == null) {
    return json;
  }
  return {
    success: json["success"] == null ? undefined : json["success"],
    documentId: json["documentId"] == null ? undefined : json["documentId"],
    fileSize: json["fileSize"] == null ? undefined : json["fileSize"],
  };
}

export function PresignedUploadControllerCompleteDirectUploadV1200ResponseToJSON(
  json: any,
): PresignedUploadControllerCompleteDirectUploadV1200Response {
  return PresignedUploadControllerCompleteDirectUploadV1200ResponseToJSONTyped(
    json,
    false,
  );
}

export function PresignedUploadControllerCompleteDirectUploadV1200ResponseToJSONTyped(
  value?: PresignedUploadControllerCompleteDirectUploadV1200Response | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    success: value["success"],
    documentId: value["documentId"],
    fileSize: value["fileSize"],
  };
}
