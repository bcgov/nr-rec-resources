/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC Admin API
 * RST Admin API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface PresignedUploadRequestDto
 */
export interface PresignedUploadRequestDto {
  /**
   * Recreation resource ID
   * @type {string}
   * @memberof PresignedUploadRequestDto
   */
  recResourceId: string;
  /**
   * File name
   * @type {string}
   * @memberof PresignedUploadRequestDto
   */
  fileName: string;
  /**
   * File size in bytes
   * @type {number}
   * @memberof PresignedUploadRequestDto
   */
  fileSize: number;
  /**
   * Content type
   * @type {string}
   * @memberof PresignedUploadRequestDto
   */
  contentType?: string;
}

/**
 * Check if a given object implements the PresignedUploadRequestDto interface.
 */
export function instanceOfPresignedUploadRequestDto(
  value: object,
): value is PresignedUploadRequestDto {
  if (!("recResourceId" in value) || value["recResourceId"] === undefined)
    return false;
  if (!("fileName" in value) || value["fileName"] === undefined) return false;
  if (!("fileSize" in value) || value["fileSize"] === undefined) return false;
  return true;
}

export function PresignedUploadRequestDtoFromJSON(
  json: any,
): PresignedUploadRequestDto {
  return PresignedUploadRequestDtoFromJSONTyped(json, false);
}

export function PresignedUploadRequestDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PresignedUploadRequestDto {
  if (json == null) {
    return json;
  }
  return {
    recResourceId: json["recResourceId"],
    fileName: json["fileName"],
    fileSize: json["fileSize"],
    contentType: json["contentType"] == null ? undefined : json["contentType"],
  };
}

export function PresignedUploadRequestDtoToJSON(
  json: any,
): PresignedUploadRequestDto {
  return PresignedUploadRequestDtoToJSONTyped(json, false);
}

export function PresignedUploadRequestDtoToJSONTyped(
  value?: PresignedUploadRequestDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    recResourceId: value["recResourceId"],
    fileName: value["fileName"],
    fileSize: value["fileSize"],
    contentType: value["contentType"],
  };
}
