/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC Admin API
 * RST Admin API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecreationSubAccessCodeDto } from './RecreationSubAccessCodeDto';
import {
  RecreationSubAccessCodeDtoFromJSON,
  RecreationSubAccessCodeDtoFromJSONTyped,
  RecreationSubAccessCodeDtoToJSON,
  RecreationSubAccessCodeDtoToJSONTyped,
} from './RecreationSubAccessCodeDto';

/**
 *
 * @export
 * @interface RecreationAccessCodeDto
 */
export interface RecreationAccessCodeDto {
  /**
   * Unique code identifying the access method
   * @type {string}
   * @memberof RecreationAccessCodeDto
   */
  code: string;
  /**
   * Description of the access method
   * @type {string}
   * @memberof RecreationAccessCodeDto
   */
  description: string;
  /**
   * List of sub-access codes associated with this access code
   * @type {Array<RecreationSubAccessCodeDto>}
   * @memberof RecreationAccessCodeDto
   */
  sub_access_codes: Array<RecreationSubAccessCodeDto>;
}

/**
 * Check if a given object implements the RecreationAccessCodeDto interface.
 */
export function instanceOfRecreationAccessCodeDto(
  value: object,
): value is RecreationAccessCodeDto {
  if (!('code' in value) || value['code'] === undefined) return false;
  if (!('description' in value) || value['description'] === undefined)
    return false;
  if (!('sub_access_codes' in value) || value['sub_access_codes'] === undefined)
    return false;
  return true;
}

export function RecreationAccessCodeDtoFromJSON(
  json: any,
): RecreationAccessCodeDto {
  return RecreationAccessCodeDtoFromJSONTyped(json, false);
}

export function RecreationAccessCodeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RecreationAccessCodeDto {
  if (json == null) {
    return json;
  }
  return {
    code: json['code'],
    description: json['description'],
    sub_access_codes: (json['sub_access_codes'] as Array<any>).map(
      RecreationSubAccessCodeDtoFromJSON,
    ),
  };
}

export function RecreationAccessCodeDtoToJSON(
  json: any,
): RecreationAccessCodeDto {
  return RecreationAccessCodeDtoToJSONTyped(json, false);
}

export function RecreationAccessCodeDtoToJSONTyped(
  value?: RecreationAccessCodeDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    code: value['code'],
    description: value['description'],
    sub_access_codes: (value['sub_access_codes'] as Array<any>).map(
      RecreationSubAccessCodeDtoToJSON,
    ),
  };
}
