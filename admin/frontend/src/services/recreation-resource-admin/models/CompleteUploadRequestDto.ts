/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC Admin API
 * RST Admin API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CompleteUploadRequestDto
 */
export interface CompleteUploadRequestDto {
  /**
   * Upload ID from presigned URL response
   * @type {string}
   * @memberof CompleteUploadRequestDto
   */
  uploadId: string;
  /**
   * Document title
   * @type {string}
   * @memberof CompleteUploadRequestDto
   */
  title: string;
  /**
   * Original file name
   * @type {string}
   * @memberof CompleteUploadRequestDto
   */
  originalFileName: string;
  /**
   * File size in bytes
   * @type {number}
   * @memberof CompleteUploadRequestDto
   */
  fileSize: number;
}

/**
 * Check if a given object implements the CompleteUploadRequestDto interface.
 */
export function instanceOfCompleteUploadRequestDto(
  value: object,
): value is CompleteUploadRequestDto {
  if (!("uploadId" in value) || value["uploadId"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("originalFileName" in value) || value["originalFileName"] === undefined)
    return false;
  if (!("fileSize" in value) || value["fileSize"] === undefined) return false;
  return true;
}

export function CompleteUploadRequestDtoFromJSON(
  json: any,
): CompleteUploadRequestDto {
  return CompleteUploadRequestDtoFromJSONTyped(json, false);
}

export function CompleteUploadRequestDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CompleteUploadRequestDto {
  if (json == null) {
    return json;
  }
  return {
    uploadId: json["uploadId"],
    title: json["title"],
    originalFileName: json["originalFileName"],
    fileSize: json["fileSize"],
  };
}

export function CompleteUploadRequestDtoToJSON(
  json: any,
): CompleteUploadRequestDto {
  return CompleteUploadRequestDtoToJSONTyped(json, false);
}

export function CompleteUploadRequestDtoToJSONTyped(
  value?: CompleteUploadRequestDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    uploadId: value["uploadId"],
    title: value["title"],
    originalFileName: value["originalFileName"],
    fileSize: value["fileSize"],
  };
}
