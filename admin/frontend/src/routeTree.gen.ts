/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RecResourceIdRouteImport } from './routes/rec-resource/$id'
import { Route as RecResourceIdIndexRouteImport } from './routes/rec-resource/$id/index'
import { Route as RecResourceIdFilesRouteImport } from './routes/rec-resource/$id/files'
import { Route as RecResourceIdOverviewIndexRouteImport } from './routes/rec-resource/$id/overview/index'
import { Route as RecResourceIdOverviewEditRouteImport } from './routes/rec-resource/$id/overview/edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecResourceIdRoute = RecResourceIdRouteImport.update({
  id: '/rec-resource/$id',
  path: '/rec-resource/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const RecResourceIdIndexRoute = RecResourceIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RecResourceIdRoute,
} as any)
const RecResourceIdFilesRoute = RecResourceIdFilesRouteImport.update({
  id: '/files',
  path: '/files',
  getParentRoute: () => RecResourceIdRoute,
} as any)
const RecResourceIdOverviewIndexRoute =
  RecResourceIdOverviewIndexRouteImport.update({
    id: '/overview/',
    path: '/overview/',
    getParentRoute: () => RecResourceIdRoute,
  } as any)
const RecResourceIdOverviewEditRoute =
  RecResourceIdOverviewEditRouteImport.update({
    id: '/overview/edit',
    path: '/overview/edit',
    getParentRoute: () => RecResourceIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rec-resource/$id': typeof RecResourceIdRouteWithChildren
  '/rec-resource/$id/files': typeof RecResourceIdFilesRoute
  '/rec-resource/$id/': typeof RecResourceIdIndexRoute
  '/rec-resource/$id/overview/edit': typeof RecResourceIdOverviewEditRoute
  '/rec-resource/$id/overview': typeof RecResourceIdOverviewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rec-resource/$id/files': typeof RecResourceIdFilesRoute
  '/rec-resource/$id': typeof RecResourceIdIndexRoute
  '/rec-resource/$id/overview/edit': typeof RecResourceIdOverviewEditRoute
  '/rec-resource/$id/overview': typeof RecResourceIdOverviewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/rec-resource/$id': typeof RecResourceIdRouteWithChildren
  '/rec-resource/$id/files': typeof RecResourceIdFilesRoute
  '/rec-resource/$id/': typeof RecResourceIdIndexRoute
  '/rec-resource/$id/overview/edit': typeof RecResourceIdOverviewEditRoute
  '/rec-resource/$id/overview/': typeof RecResourceIdOverviewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/rec-resource/$id'
    | '/rec-resource/$id/files'
    | '/rec-resource/$id/'
    | '/rec-resource/$id/overview/edit'
    | '/rec-resource/$id/overview'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/rec-resource/$id/files'
    | '/rec-resource/$id'
    | '/rec-resource/$id/overview/edit'
    | '/rec-resource/$id/overview'
  id:
    | '__root__'
    | '/'
    | '/rec-resource/$id'
    | '/rec-resource/$id/files'
    | '/rec-resource/$id/'
    | '/rec-resource/$id/overview/edit'
    | '/rec-resource/$id/overview/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RecResourceIdRoute: typeof RecResourceIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rec-resource/$id': {
      id: '/rec-resource/$id'
      path: '/rec-resource/$id'
      fullPath: '/rec-resource/$id'
      preLoaderRoute: typeof RecResourceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rec-resource/$id/': {
      id: '/rec-resource/$id/'
      path: '/'
      fullPath: '/rec-resource/$id/'
      preLoaderRoute: typeof RecResourceIdIndexRouteImport
      parentRoute: typeof RecResourceIdRoute
    }
    '/rec-resource/$id/files': {
      id: '/rec-resource/$id/files'
      path: '/files'
      fullPath: '/rec-resource/$id/files'
      preLoaderRoute: typeof RecResourceIdFilesRouteImport
      parentRoute: typeof RecResourceIdRoute
    }
    '/rec-resource/$id/overview/': {
      id: '/rec-resource/$id/overview/'
      path: '/overview'
      fullPath: '/rec-resource/$id/overview'
      preLoaderRoute: typeof RecResourceIdOverviewIndexRouteImport
      parentRoute: typeof RecResourceIdRoute
    }
    '/rec-resource/$id/overview/edit': {
      id: '/rec-resource/$id/overview/edit'
      path: '/overview/edit'
      fullPath: '/rec-resource/$id/overview/edit'
      preLoaderRoute: typeof RecResourceIdOverviewEditRouteImport
      parentRoute: typeof RecResourceIdRoute
    }
  }
}

interface RecResourceIdRouteChildren {
  RecResourceIdFilesRoute: typeof RecResourceIdFilesRoute
  RecResourceIdIndexRoute: typeof RecResourceIdIndexRoute
  RecResourceIdOverviewEditRoute: typeof RecResourceIdOverviewEditRoute
  RecResourceIdOverviewIndexRoute: typeof RecResourceIdOverviewIndexRoute
}

const RecResourceIdRouteChildren: RecResourceIdRouteChildren = {
  RecResourceIdFilesRoute: RecResourceIdFilesRoute,
  RecResourceIdIndexRoute: RecResourceIdIndexRoute,
  RecResourceIdOverviewEditRoute: RecResourceIdOverviewEditRoute,
  RecResourceIdOverviewIndexRoute: RecResourceIdOverviewIndexRoute,
}

const RecResourceIdRouteWithChildren = RecResourceIdRoute._addFileChildren(
  RecResourceIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RecResourceIdRoute: RecResourceIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
