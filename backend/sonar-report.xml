<testExecutions version="1">
  <file path="src/app.controller.spec.ts">
    <testCase name="AppController - root - should return &quot;Hello Backend!&quot;" duration="8" />
  </file>
  <file path="src/app.spec.ts">
    <testCase name="main - should start the application" duration="1" />
  </file>
  <file path="src/common/logger.config.spec.ts">
    <testCase name="CustomLogger - should be defined" duration="1" />
    <testCase name="CustomLogger - should log a message" duration="4" />
  </file>
  <file path="src/middleware/req.res.logger.spec.ts">
    <testCase name="HTTPLoggerMiddleware - should log the correct information" duration="9" />
  </file>
  <file path="src/recreation-resource/recreation-resource.controller.spec.ts">
    <testCase name="RecreationResourceController - should be defined" duration="108" />
    <testCase name="RecreationResourceController - findAll - should return an array of users" duration="2" />
    <testCase name="RecreationResourceController - findOne - should return a Recreation Resource object" duration="1" />
    <testCase name="RecreationResourceController - findOne - should throw error if recreation resource not found" duration="1" />
  </file>
  <file path="src/recreation-resource/recreation-resource.service.spec.ts">
    <testCase name="RecreationResourceService - should be defined" duration="7" />
    <testCase name="RecreationResourceService - formatResults function - should correctly format recreation_activity with_description relation in the results" duration="1" />
    <testCase name="RecreationResourceService - formatResults function - should return an empty array if no Recreation Resources are found" duration="1" />
    <testCase name="RecreationResourceService - formatResults function - should throw an error with garbage data" duration="1" />
    <testCase name="RecreationResourceService - findOne - should return a Recreation Resource" duration="1" />
    <testCase name="RecreationResourceService - findOne - should return null if Recreation Resource is not found" duration="1" />
    <testCase name="RecreationResourceService - findOne - should correctly format recreation_activity with_description relation in the response" duration="1" />
    <testCase name="RecreationResourceService - findAll - should return an array of Recreation Resources" duration="1" />
    <testCase name="RecreationResourceService - findAll - should correctly format recreation_activity with_description relation in the results" duration="1" />
    <testCase name="RecreationResourceService - findAll - should return an empty array if no Recreation Resources are found" duration="1" />
    <testCase name="RecreationResourceService - searchRecreationResources - should return an array of Recreation Resources" duration="1" />
    <testCase name="RecreationResourceService - searchRecreationResources - should correctly format recreation_activity with_description relation in the results" duration="1" />
    <testCase name="RecreationResourceService - searchRecreationResources - should return results sorted by name in ascending order" duration="1" />
    <testCase name="RecreationResourceService - searchRecreationResources - should return an empty array if no Recreation Resources are found" duration="2" />
    <testCase name="RecreationResourceService - searchRecreationResources - should throw an error if page is greater than 10 and limit is not provided" duration="3" />
  </file>
</testExecutions>
