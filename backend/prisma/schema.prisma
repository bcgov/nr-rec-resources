generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics"]
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model recreation_resource {
  rec_resource_id        String                @id @db.VarChar(200)
  name                   String?               @db.VarChar(200)
  description            String?               @db.VarChar(5000)
  site_location          String?               @db.VarChar(200)
  display_on_public_site Boolean?              @default(false)
  rec_resource_type      String?               @db.VarChar(50)
  recreation_activity    recreation_activity[]
  recreation_status      recreation_status?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model recreation_activity {
  id                       Int                      @id @default(autoincrement())
  rec_resource_id          String                   @db.VarChar(200)
  recreation_activity_code Int
  recreation_resource      recreation_resource      @relation(fields: [rec_resource_id], references: [rec_resource_id], onDelete: NoAction, onUpdate: NoAction)
  with_description         recreation_activity_code @relation("activity_with_description", fields: [recreation_activity_code], references: [recreation_activity_code], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model recreation_activity_code {
  recreation_activity_code Int                   @id @default(autoincrement())
  description              String?               @db.VarChar(120)
  with_description         recreation_activity[] @relation("activity_with_description")
}

model recreation_status {
  rec_resource_id        String                 @id @db.VarChar(200)
  status_code            Int
  comment                String                 @db.VarChar(5000)
  recreation_resource    recreation_resource    @relation(fields: [rec_resource_id], references: [rec_resource_id], onDelete: NoAction, onUpdate: NoAction)
  recreation_status_code recreation_status_code @relation(fields: [status_code], references: [status_code], onDelete: NoAction, onUpdate: NoAction)
}

model recreation_status_code {
  status_code       Int                 @id @default(autoincrement())
  description       String              @db.VarChar(120)
  recreation_status recreation_status[]
}
