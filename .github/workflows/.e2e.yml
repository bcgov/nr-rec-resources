name: Playwright e2e tests

on:
  workflow_call:
    inputs:
      app:
        description: 'The app to run tests on'
        required: true
        type: string
      environment:
        description: 'The GitHub environment to run the tests in'
        required: false
        type: string
      tag:
        description: 'The tag of the containers to run tests on'
        required: true
        type: string
      local:
        description: 'Run locally using docker compose'
        required: false
        type: boolean
        default: false

jobs:
  playwright-e2e:
    # Remove this once admin e2e tests are implemented
    if: ${{ inputs.app == 'public' }}
    name: Playwright e2e
    timeout-minutes: 60
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: Run Docker compose
      if: ${{ inputs.local }}
      env:
        BACKEND_IMAGE: ghcr.io/bcgov/nr-rec-resources/${{ inputs.app }}/backend:${{ inputs.tag }}
        FLYWAY_IMAGE: ghcr.io/bcgov/nr-rec-resources/migrations/rst:${{ inputs.tag }}
        FRONTEND_IMAGE: ghcr.io/bcgov/nr-rec-resources/${{ inputs.app }}/frontend:${{ inputs.tag }}
        FRONTEND_PORT: "${{ inputs.app == 'admin' && '3001' || '3000' }}"
        KEYCLOAK_AUTH_SERVER_URL: ${{ secrets.KEYCLOAK_AUTH_SERVER_URL }}
        KEYCLOAK_REALM: ${{ secrets.KEYCLOAK_REALM }}
        KEYCLOAK_CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
        KEYCLOAK_ISSUER: ${{ secrets.KEYCLOAK_ISSUER }}
        DAM_URL: ${{ secrets.DAM_URL }}
        DAM_PRIVATE_KEY: ${{ secrets.DAM_PRIVATE_KEY }}
        DAM_USER: ${{ secrets.DAM_USER }}
        DAM_RST_PDF_COLLECTION_ID: ${{ secrets.DAM_RST_PDF_COLLECTION_ID }}
        DAM_RST_IMAGE_COLLECTION_ID: ${{ secrets.DAM_RST_IMAGE_COLLECTION_ID }}
        DAM_RESOURCE_TYPE_PDF: ${{ secrets.DAM_RESOURCE_TYPE_PDF }}
        DAM_RESOURCE_TYPE_IMAGE: ${{ secrets.DAM_RESOURCE_TYPE_IMAGE }}
      run: docker compose up -d --wait
      continue-on-error: true
    - name: Dump docker logs for debugging
      if: ${{ inputs.local }}
      uses: jwalton/gh-docker-logs@2741064ab9d7af54b0b1ffb6076cf64c16f0220e # v2
    - name: Cache Playwright Browsers
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
    - name: Fix permissions
      run: sudo chown -R $USER:$USER public/frontend
    - name: Setup node
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
      with:
        node-version: '22'
    - run: npm install
      working-directory: ./${{ inputs.app }}/frontend
    - run: npx @playwright/test install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      working-directory: ./${{ inputs.app }}/frontend
    - run: npx @playwright/test install-deps
      if: steps.playwright-cache.outputs.cache-hit == 'true'
      working-directory: ./${{ inputs.app }}/frontend
    - name: Run Playwright tests
      run: npx happo-e2e -- npx playwright test
      working-directory: ./${{ inputs.app }}/frontend
      env:
        HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
        HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
        HAPPO_PROJECT: "${{ inputs.local && secrets.HAPPO_PROJECT_LOCAL || secrets.HAPPO_PROJECT }}"
        E2E_BASE_URL: "${{
            inputs.local && inputs.app == 'admin' && 'http://localhost:3001' ||
            inputs.local && inputs.app != 'admin' && 'http://localhost:3000' ||
            secrets.E2E_BASE_URL
          }}"
    - name: Dump docker logs on failure
      if: failure() && ${{ inputs.local }}
      uses: jwalton/gh-docker-logs@2741064ab9d7af54b0b1ffb6076cf64c16f0220e # v2

  # Remove this job once admin e2e tests are implemented
  admin:
    if: ${{ inputs.app == 'admin' }}
    name: Skip Playwright e2e
    runs-on: ubuntu-24.04
    steps:
    - name: Skip Playwright e2e
      run: echo "Skipping Playwright e2e tests for admin app"
