name: Deploy application to AWS

on:
  workflow_call:
    inputs:
      app_env:
        required: true
        description: 'The APP env separates between AWS ENV and Actual APP, since AWS dev is where PR, and TEST is deployed'
        type: string
      command:
        required: true
        description: 'The Terraform command to run'
        type: string
      environment_name:
        description: 'The name of the environment to deploy to'
        required: true
        type: string
      tag:
        description: 'The tag of the containers to deploy'
        required: true
        type: string

env:
  AWS_REGION: ca-central-1

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout
  packages: write
  pull-requests: write

jobs:
  # https://github.com/bcgov/quickstart-openshift-helpers
  deploy-db:
    name: Deploys Database
    uses: ./.github/workflows/.aws-deployer.yml
    with:
      app_env: ${{ inputs.app_env }}
      environment_name: ${{ inputs.environment_name }}
      command: ${{ inputs.command }}
      working_directory: database
    secrets: inherit
  deploy-api:
    name: Deploys API
    needs: [deploy-db]
    uses: ./.github/workflows/.aws-deployer.yml
    with:
      environment_name: ${{ inputs.environment_name }}
      command: ${{ inputs.command }}
      working_directory: api
      tag: ${{ inputs.tag }}
      app_env: ${{ inputs.app_env }}
    secrets: inherit
  deploy-cloudfront:
    name: Deploys Cloudfront
    uses: ./.github/workflows/.aws-deployer.yml
    with:
      environment_name: ${{ inputs.environment_name }}
      command: ${{ inputs.command }}
      working_directory: frontend
      app_env: ${{ inputs.app_env }}
    secrets: inherit
  build-ui:
    name: Builds UI
    needs: [deploy-api, deploy-cloudfront]
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment_name }}
    if: ${{ inputs.command == 'apply' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: public/frontend/package-lock.json
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
            aws-region: ${{ env.AWS_REGION }}
      - name: Build And Update UI (CF)
        working-directory: 'public/frontend'
        env:
          VITE_RECREATION_RESOURCE_ASSETS_BASE_URL: "https://dam.lqc63d-prod.nimbus.cloud.gov.bc.ca"
          VITE_API_BASE_URL: ${{ needs.deploy-api.outputs.API_GW_URL }}/api
          VITE_MATOMO_URL: ${{ secrets.VITE_MATOMO_URL }}
          VITE_MATOMO_SITE_ID: ${{ secrets.VITE_MATOMO_SITE_ID }}
          VITE_SEARCH_CITIES_API_URL: ${{ secrets.VITE_SEARCH_CITIES_API_URL }}
          S3_BUCKET_ARN: ${{ needs.deploy-cloudfront.outputs.S3_BUCKET_ARN }}
          CF_DISTRIBUTION_ID: ${{ needs.deploy-cloudfront.outputs.CF_DISTRIBUTION_ID }}
        run: |
          echo "VITE_RECREATION_RESOURCE_ASSETS_BASE_URL: $VITE_RECREATION_RESOURCE_ASSETS_BASE_URL"
          npm run deploy
          aws s3 sync --delete ./dist s3://$(echo "$S3_BUCKET_ARN" | cut -d: -f6) --exclude ".*" --exclude "*/.*"
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --paths "/*"
  fta-migration:
    name: FTA migration
    uses: ./.github/workflows/.aws-deployer.yml
    needs: [deploy-api]
    if: ${{ inputs.command == 'apply' }}
    with:
      app_env: ${{ inputs.app_env || 'dev' }}
      environment_name: ${{ inputs.environment_name || 'dev' }}
      command: apply
      flyway_image: ghcr.io/bcgov/nr-rec-resources/migrations/fta:${{ inputs.tag || 'latest' }}
      working_directory: migration
      tag: ${{ inputs.tag }}
    secrets: inherit
