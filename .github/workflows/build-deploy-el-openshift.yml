name: Build & Deploy Spring Boot EL API to OpenShift
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - 'backend-el/**'
      - 'charts/**'
      - '.github/workflows/build-deploy-el-openshift.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to OpenShift'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to OpenShift'
        default: 'dev'


jobs:
  triggers:
    name: Triggers
    if: github.event.action != 'closed'
    runs-on: ubuntu-24.04
    outputs:
      triggered: ${{ steps.diff_triggers.outputs.triggered }}
    steps:
      - uses: bcgov/action-diff-triggers@v0.2.0
        id: diff_triggers
        with:
          triggers: ('.github/workflows/build-deploy-el-openshift.yml' 'backend-el' 'charts/backend-el')
  build:
    name: Build Spring Boot Oracle EL Containers
    needs: [triggers]
    if: (always() && (needs.triggers.outputs.triggered == 'true' || github.event_name == 'workflow_dispatch') && (github.event.action != 'closed') && (!github.event.pull_request.draft))
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        package: ['backend-el']
        include:
          - package: 'backend-el'
            build_file: ./backend-el/Dockerfile
            build_context: ./backend-el
    timeout-minutes: 10
    steps:
      - uses: bcgov/action-builder-ghcr@d63c76a4bb7914d3a986a035904b49d99c2c4613 # v3.0.0
        with:
          package: ${{ matrix.package }}
          tags: ${{ github.sha }}
          build_file: ${{ matrix.build_file }}
          build_context: ${{ matrix.build_context }}
  deploy:
    name: Deploy Helm Chart to OpenShift ${{ github.event.inputs.environment }}
    needs: [build]
    # Deploy to prod if PR is merged
    environment: openshift-${{ github.event.inputs.environment || (github.event.action == 'closed' && 'prod') || 'dev' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Helm Deploy
        id: deploy
        uses: bcgov/action-oc-runner@v1.2.0
        env:
          DB_PASSWORD: ${{ secrets.DBPASSWORD }} # handle special characters.
        with:
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_server: ${{ vars.oc_server }}
          commands: |
            # Deploy
            cd charts/backend-el
            
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              export AWS_S3_BUCKET="fta-rec-rst-uploads"
              export BASE_RELEASE_NAME="backend-el-pr-${{ github.event.number }}"
            else
              export AWS_S3_BUCKET="${{ secrets.AWS_S3_BUCKET }}"
              export BASE_RELEASE_NAME="backend-el"
            fi
            
            # Package helm chart once
            helm package -u . --app-version="${{ github.sha }}" --version=1.0.0
            
            # Deploy main job
            helm upgrade \
              --set-string image.tag="${{ github.sha }}" \
              --set-string secrets.dbHost="${{ secrets.DBHOST }}" \
              --set-string secrets.dbName="${{ secrets.DBNAME }}" \
              --set-string secrets.dbPassword="$DB_PASSWORD" \
              --set-string secrets.dbUser="${{ secrets.DBUSER }}" \
              --set-string config.awsS3Bucket="$AWS_S3_BUCKET" \
              --set-string schedule="${{ secrets.SCHEDULE }}" \
              --install --wait \
              --values values.yaml "$BASE_RELEASE_NAME" \
              ./backend-el-1.0.0.tgz
            
            # Deploy hourly sync job
            helm upgrade \
              --set-string image.tag="${{ github.sha }}" \
              --set-string secrets.dbHost="${{ secrets.DBHOST }}" \
              --set-string secrets.dbName="${{ secrets.DBNAME }}" \
              --set-string secrets.dbPassword="$DB_PASSWORD" \
              --set-string secrets.dbUser="${{ secrets.DBUSER }}" \
              --set-string config.awsS3Bucket="$AWS_S3_BUCKET" \
              --set-string schedule="15 * * * *" \
              --set-string config.appArgs="--hourly-sync" \
              --install --wait \
              --no-hooks \
              --values values.yaml "$BASE_RELEASE_NAME-hourly" \
              ./backend-el-1.0.0.tgz
            
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              oc create job $BASE_RELEASE_NAME-${{github.run_number}} --from=cronjob/$BASE_RELEASE_NAME
              oc wait --for=condition=complete --timeout=600s job/$BASE_RELEASE_NAME-${{github.run_number}}
            fi
  clean_up:
    name: Clean up
    if: github.event_name=='pull_request' && github.event.action == 'closed'
    environment: openshift-${{ github.event.inputs.environment || 'dev' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Helm Uninstall on PR close
        id: helm-uninstall
        uses: bcgov/action-oc-runner@v1.2.0
        with:
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_server: ${{ vars.oc_server }}
          commands: |
            # Helm Uninstall
            helm uninstall backend-el-pr-${{ github.event.number }}-hourly || true
            helm uninstall backend-el-pr-${{ github.event.number }} || true
