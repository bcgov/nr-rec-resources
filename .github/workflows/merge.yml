name: Merge

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '!.github/workflows/**'
  workflow_dispatch:
    inputs:
      pr_no:
        description: "PR-numbered container set to deploy"
        type: number
        required: true

concurrency:
  # Do not interrupt previous workflows
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  vars:
    name: Set Variables
    outputs:
      pr: ${{ steps.pr.outputs.pr || github.event.inputs.pr_no }}
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    steps:
      # Get PR number for squash merges to main
      - name: PR Number
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: pr
        uses: bcgov-nr/action-get-pr@v0.0.1

  # Leaving this in for now as OpenShift deployment is likely needed for
  # the API to communicate with Oracle database
  # deploy-test:
  #   name: Deploy (test)
  #   uses: ./.github/workflows/.deployer.yml
  #   secrets:
  #     oc_namespace: ${{ secrets.OC_NAMESPACE }}
  #     oc_token: ${{ secrets.OC_TOKEN }}
  #   with:
  #     environment: test
  #     db_user: app
  #
  # deploy-prod:
  #   name: Deploy (prod)
  #   needs: [deploy-test, vars]
  #   uses: ./.github/workflows/.deployer.yml
  #   secrets:
  #     oc_namespace: ${{ secrets.OC_NAMESPACE }}
  #     oc_token: ${{ secrets.OC_TOKEN }}
  #   with:
  #     environment: prod
  #     db_user: app
  #     params:
  #       --set backend.deploymentStrategy=RollingUpdate
  #       --set frontend.deploymentStrategy=RollingUpdate
  #       --set global.autoscaling=true
  #       --set frontend.pdb.enabled=true
  #       --set backend.pdb.enabled=true

  deploy-to-aws-dev:
    needs: [vars]
    name: Deploys Application to AWS dev
    uses: ./.github/workflows/.deploy-app.yml
    with:
      environment_name: dev
      app_env: dev
    secrets: inherit

  promote:
    name: Promote Images
    needs: [deploy-to-aws-dev, vars]
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [migrations, backend]
    timeout-minutes: 1
    steps:
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ needs.vars.outputs.pr }}
          tags: |
            prod
            latest
            ${{ needs.vars.outputs.pr }}
