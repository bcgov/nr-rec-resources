name: .Terraform Deployer

on:
  workflow_call:
    inputs:
      app:
        description: 'The name of the application to deploy'
        required: false
        type: string
      app_env:
        required: false
        type: string
        description: 'The APP env separates between AWS ENV and Actual APP, since AWS dev is where PR, and TEST is deployed'
      command:
        description: 'The terragrunt command to run'
        required: true
        default: 'apply'
        type: string
      environment_name:
        description: 'The name of the environment to deploy to'
        required: true
        default: 'dev'
        type: string
      tag:
        description: 'The tag of the containers to deploy'
        default: 'latest'
        type: string
        required: false
      working_directory:
        description: 'The working directory to run the command in'
        required: true
        default: 'database'
        type: string
      flyway_image:
        description: 'Optional input to pass in a different flyway migration image'
        required: false
        type: string
    outputs:
      API_GW_URL:
        value: ${{ jobs.infra.outputs.API_GW_URL }}
      S3_BUCKET_ARN:
        value: ${{ jobs.infra.outputs.S3_BUCKET_ARN }}
      CF_DOMAIN:
        value: ${{ jobs.infra.outputs.CF_DOMAIN }}
      CF_DISTRIBUTION_ID:
        value: ${{ jobs.infra.outputs.CF_DISTRIBUTION_ID }}

env:
  TG_VERSION: 0.55.2
  TF_VERSION: 1.5.3
  AWS_REGION: ca-central-1
  FLYWAY_IMAGE: ghcr.io/${{ github.repository }}/migrations/rst:${{ inputs.tag }}

jobs:
  infra:
    name: Terraform ${{ inputs.command }} ${{ inputs.app }} ${{ inputs.working_directory }} ${{ inputs.environment_name }}
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment_name }}
    outputs:
      API_GW_URL: ${{ steps.tg-outputs.outputs.API_GW_URL }}
      S3_BUCKET_ARN: ${{ steps.tg-outputs-frontend.outputs.S3_BUCKET_ARN }}
      CF_DOMAIN: ${{ steps.tg-outputs-frontend.outputs.CF_DOMAIN }}
      CF_DISTRIBUTION_ID: ${{ steps.tg-outputs-frontend.outputs.CF_DISTRIBUTION_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_LZA_DEPLOY_ROLE_ARN }}
          role-session-name: ${{ inputs.environment_name }}-deployment
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v3
        with:
          terragrunt-version: ${{ env.TG_VERSION }}

      - name: Set deployment path
        id: set-path
        run: |
          if [[ "${{ inputs.working_directory }}" == "api" || "${{ inputs.working_directory }}" == "frontend" ]]; then
            echo "TG_WORKING_PATH=terraform/${{ inputs.working_directory }}/${{ inputs.app }}-${{ inputs.environment_name }}" >> $GITHUB_ENV
          else
            echo "TG_WORKING_PATH=terraform/${{ inputs.working_directory }}/${{ inputs.environment_name }}" >> $GITHUB_ENV
          fi

      - name: Terragrunt ${{ inputs.command }}
        working-directory: ${{ env.TG_WORKING_PATH }}
        env:
          app: ${{ inputs.app }}
          target_env: ${{ inputs.environment_name }}
          aws_license_plate: ${{ secrets.AWS_LZA_LICENSE_PLATE }}
          flyway_image: ${{ inputs.flyway_image && inputs.flyway_image || env.FLYWAY_IMAGE }}
          api_image: ghcr.io/${{ github.repository }}/${{ inputs.app }}/backend:${{ inputs.tag }}
          app_env: ${{ inputs.app_env }}
          forest_client_api_key: ${{ secrets.FOREST_CLIENT_API_KEY }}
          forest_client_api_url: ${{ secrets.FOREST_CLIENT_API_URL }}
          alarm_alert_email_recipients: ${{ secrets.alarm_alert_email_recipients }}
          keycloak_auth_server_url: ${{ secrets.KEYCLOAK_AUTH_SERVER_URL }}
          keycloak_realm: ${{ secrets.KEYCLOAK_REALM }}
          keycloak_client_id: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          keycloak_issuer: ${{ secrets.KEYCLOAK_ISSUER }}
          dam_url: ${{ secrets.DAM_URL }}
          dam_private_key: ${{ secrets.DAM_PRIVATE_KEY }}
          dam_user: ${{ secrets.DAM_USER }}
          dam_rst_pdf_collection_id: ${{ secrets.DAM_RST_PDF_COLLECTION_ID }}
          dam_rst_image_collection_id: ${{ secrets.DAM_RST_IMAGE_COLLECTION_ID }}
        run: |
          terragrunt run-all ${{ inputs.command }} --terragrunt-non-interactive

      - name: Terragrunt API Outputs
        if: ${{ inputs.working_directory == 'api' }}
        working-directory: ${{ env.TG_WORKING_PATH }}
        id: tg-outputs
        env:
          app: ${{ inputs.app }}
          target_env: ${{ inputs.environment_name }}
          aws_license_plate: ${{ secrets.AWS_LZA_LICENSE_PLATE }}
          flyway_image: ghcr.io/${{ github.repository }}/migrations/rst:${{ inputs.tag }}
          api_image: ghcr.io/${{ github.repository }}/public/backend:${{ inputs.tag }}
          app_env: ${{ inputs.app_env }}
          forest_client_api_key: ${{ secrets.FOREST_CLIENT_API_KEY }}
          forest_client_api_url: ${{ secrets.FOREST_CLIENT_API_URL }}
          alarm_alert_email_recipients: ${{ secrets.ALARM_ALERT_EMAIL_RECIPIENTS }}
          keycloak_auth_server_url: ${{ secrets.KEYCLOAK_AUTH_SERVER_URL }}
          keycloak_realm: ${{ secrets.KEYCLOAK_REALM }}
          keycloak_client_id: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          keycloak_issuer: ${{ secrets.KEYCLOAK_ISSUER }}
          dam_url: ${{ secrets.DAM_URL }}
          dam_private_key: ${{ secrets.DAM_PRIVATE_KEY }}
          dam_user: ${{ secrets.DAM_USER }}
          dam_rst_pdf_collection_id: ${{ secrets.DAM_RST_PDF_COLLECTION_ID }}
          dam_rst_image_collection_id: ${{ secrets.DAM_RST_IMAGE_COLLECTION_ID }}
        run: |
          terragrunt output -json > outputs.json
          cat outputs.json
          echo "API_GW_URL=$(jq -r .apigw_url.value outputs.json)" >> $GITHUB_OUTPUT

      - name: Terragrunt Frontend Outputs
        if: ${{ inputs.working_directory == 'frontend' }}
        working-directory: ${{ env.TG_WORKING_PATH }}
        id: tg-outputs-frontend
        env:
          app: ${{ inputs.app }}
          target_env: ${{ inputs.environment_name }}
          aws_license_plate: ${{ secrets.AWS_LZA_LICENSE_PLATE }}
          flyway_image: ghcr.io/${{ github.repository }}/migrations/rst:${{ inputs.tag }}
          api_image: ghcr.io/${{ github.repository }}/public/backend:${{ inputs.tag }}
          app_env: ${{ inputs.app_env }}
        run: |
          terragrunt output -json > outputs.json
          cat outputs.json
          echo "S3_BUCKET_ARN=$(jq -r .s3_bucket_arn.value outputs.json)" >> $GITHUB_OUTPUT
          echo "CF_DOMAIN=$(jq -r .cloudfront.value.domain_name outputs.json)" >> $GITHUB_OUTPUT
          echo "CF_DISTRIBUTION_ID=$(jq -r .cloudfront.value.distribution_id outputs.json)" >> $GITHUB_OUTPUT
