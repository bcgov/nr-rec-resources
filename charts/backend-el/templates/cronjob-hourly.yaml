{{/* To run the hourly data extraction job */}}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-hourly
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  schedule: {{.Values.hourlySchedule | quote}}
  concurrencyPolicy: "Replace"
  successfulJobsHistoryLimit: {{.Values.successHistoryLimit }}
  failedJobsHistoryLimit: {{.Values.failedHistoryLimit }}
  jobTemplate:
    metadata:
      labels:
        {{- include "labels" . | nindent 8 }}
    spec:
      backoffLimit: {{.Values.backoffLimit}}
      activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            {{- include "labels" . | nindent 12 }}
          annotations:
            redeploy-timestamp: "{{ .Values.image.tag | default .Chart.AppVersion }}"
        spec:
          volumes:
            - name: {{ .Release.Name }}-csv
              persistentVolumeClaim:
                claimName: {{ .Release.Name }}-csv
          containers:
            - name: {{ .Chart.Name }}
              image: "artifacts.developer.gov.bc.ca/github-docker-remote/bcgov/nr-rec-resources/backend-el:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: Always
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              envFrom:
                - secretRef:
                    name: {{ .Release.Name }}-backend-el
                - secretRef:
                    name: aws-secrets
              env:
                - name: DB_PORT
                  value: "1543"
                - name: FILE_BASE_PATH # this is where the pvc is mounted and local csv files are stored before uploading to S3
                  value: "/uploads"
                - name: SPRING_JPA_SHOW_SQL
                  value: "false"
                - name: AWS_S3_BUCKET
                  value: "{{ .Values.config.awsS3Bucket }}"
                - name: spring_profiles_active
                  value: "openshift"
                - name: JOB_MODE # for backend-el app to run the hourly job
                  value: "hourly"
              volumeMounts:
                - name: {{ .Release.Name }}-csv
                  mountPath: /uploads
          restartPolicy: OnFailure
