/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecreationResourceImageDto } from './RecreationResourceImageDto';
import {
    RecreationResourceImageDtoFromJSON,
    RecreationResourceImageDtoFromJSONTyped,
    RecreationResourceImageDtoToJSON,
    RecreationResourceImageDtoToJSONTyped,
} from './RecreationResourceImageDto';
import type { RecreationStatusDto } from './RecreationStatusDto';
import {
    RecreationStatusDtoFromJSON,
    RecreationStatusDtoFromJSONTyped,
    RecreationStatusDtoToJSON,
    RecreationStatusDtoToJSONTyped,
} from './RecreationStatusDto';
import type { RecreationActivityDto } from './RecreationActivityDto';
import {
    RecreationActivityDtoFromJSON,
    RecreationActivityDtoFromJSONTyped,
    RecreationActivityDtoToJSON,
    RecreationActivityDtoToJSONTyped,
} from './RecreationActivityDto';

/**
 * 
 * @export
 * @interface RecreationResourceSearchWithGeometryDto
 */
export interface RecreationResourceSearchWithGeometryDto {
    /**
     * Unique identifier of the Recreation Resource
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    rec_resource_id: string;
    /**
     * Official name of the Recreation Resource
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    name: string;
    /**
     * Physical location of the Recreation Resource
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    closest_community: string;
    /**
     * List of recreational activities available at this resource
     * @type {Array<RecreationActivityDto>}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    recreation_activity: Array<RecreationActivityDto>;
    /**
     * Current operational status of the Recreation Resource
     * @type {RecreationStatusDto}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    recreation_status: RecreationStatusDto;
    /**
     * Code representing a specific feature associated with the recreation resource
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    rec_resource_type: string;
    /**
     * List of images for the recreation resource
     * @type {Array<RecreationResourceImageDto>}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    recreation_resource_images?: Array<RecreationResourceImageDto>;
    /**
     * Detailed description of the Recreation Resource
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    description: string;
    /**
     * GeoJSON geometry data for the rec resource in string format
     * @type {Array<string>}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    spatial_feature_geometry?: Array<string>;
    /**
     * GeoJSON geometry data for the point location for the rec resource in string format
     * @type {string}
     * @memberof RecreationResourceSearchWithGeometryDto
     */
    site_point_geometry?: string;
}

/**
 * Check if a given object implements the RecreationResourceSearchWithGeometryDto interface.
 */
export function instanceOfRecreationResourceSearchWithGeometryDto(value: object): value is RecreationResourceSearchWithGeometryDto {
    if (!('rec_resource_id' in value) || value['rec_resource_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('closest_community' in value) || value['closest_community'] === undefined) return false;
    if (!('recreation_activity' in value) || value['recreation_activity'] === undefined) return false;
    if (!('recreation_status' in value) || value['recreation_status'] === undefined) return false;
    if (!('rec_resource_type' in value) || value['rec_resource_type'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function RecreationResourceSearchWithGeometryDtoFromJSON(json: any): RecreationResourceSearchWithGeometryDto {
    return RecreationResourceSearchWithGeometryDtoFromJSONTyped(json, false);
}

export function RecreationResourceSearchWithGeometryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecreationResourceSearchWithGeometryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'rec_resource_id': json['rec_resource_id'],
        'name': json['name'],
        'closest_community': json['closest_community'],
        'recreation_activity': ((json['recreation_activity'] as Array<any>).map(RecreationActivityDtoFromJSON)),
        'recreation_status': RecreationStatusDtoFromJSON(json['recreation_status']),
        'rec_resource_type': json['rec_resource_type'],
        'recreation_resource_images': json['recreation_resource_images'] == null ? undefined : ((json['recreation_resource_images'] as Array<any>).map(RecreationResourceImageDtoFromJSON)),
        'description': json['description'],
        'spatial_feature_geometry': json['spatial_feature_geometry'] == null ? undefined : json['spatial_feature_geometry'],
        'site_point_geometry': json['site_point_geometry'] == null ? undefined : json['site_point_geometry'],
    };
}

export function RecreationResourceSearchWithGeometryDtoToJSON(json: any): RecreationResourceSearchWithGeometryDto {
    return RecreationResourceSearchWithGeometryDtoToJSONTyped(json, false);
}

export function RecreationResourceSearchWithGeometryDtoToJSONTyped(value?: RecreationResourceSearchWithGeometryDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'rec_resource_id': value['rec_resource_id'],
        'name': value['name'],
        'closest_community': value['closest_community'],
        'recreation_activity': ((value['recreation_activity'] as Array<any>).map(RecreationActivityDtoToJSON)),
        'recreation_status': RecreationStatusDtoToJSON(value['recreation_status']),
        'rec_resource_type': value['rec_resource_type'],
        'recreation_resource_images': value['recreation_resource_images'] == null ? undefined : ((value['recreation_resource_images'] as Array<any>).map(RecreationResourceImageDtoToJSON)),
        'description': value['description'],
        'spatial_feature_geometry': value['spatial_feature_geometry'],
        'site_point_geometry': value['site_point_geometry'],
    };
}

