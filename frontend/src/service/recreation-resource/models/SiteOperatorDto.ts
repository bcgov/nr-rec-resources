/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SiteOperatorDto
 */
export interface SiteOperatorDto {
    /**
     * Unique identifier of the Site Operator
     * @type {string}
     * @memberof SiteOperatorDto
     */
    clientNumber: string;
    /**
     * Client Name
     * @type {string}
     * @memberof SiteOperatorDto
     */
    clientName: string;
    /**
     * Client Legal First Name
     * @type {string}
     * @memberof SiteOperatorDto
     */
    legalFirstName: string;
    /**
     * Client Legal Middle Name
     * @type {string}
     * @memberof SiteOperatorDto
     */
    legalMiddleName: string;
    /**
     * Client Status Code
     * @type {string}
     * @memberof SiteOperatorDto
     */
    clientStatusCode: string;
    /**
     * Client Type Code
     * @type {string}
     * @memberof SiteOperatorDto
     */
    clientTypeCode: string;
    /**
     * Client Acronym
     * @type {string}
     * @memberof SiteOperatorDto
     */
    acronym: string;
}

/**
 * Check if a given object implements the SiteOperatorDto interface.
 */
export function instanceOfSiteOperatorDto(value: object): value is SiteOperatorDto {
    if (!('clientNumber' in value) || value['clientNumber'] === undefined) return false;
    if (!('clientName' in value) || value['clientName'] === undefined) return false;
    if (!('legalFirstName' in value) || value['legalFirstName'] === undefined) return false;
    if (!('legalMiddleName' in value) || value['legalMiddleName'] === undefined) return false;
    if (!('clientStatusCode' in value) || value['clientStatusCode'] === undefined) return false;
    if (!('clientTypeCode' in value) || value['clientTypeCode'] === undefined) return false;
    if (!('acronym' in value) || value['acronym'] === undefined) return false;
    return true;
}

export function SiteOperatorDtoFromJSON(json: any): SiteOperatorDto {
    return SiteOperatorDtoFromJSONTyped(json, false);
}

export function SiteOperatorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SiteOperatorDto {
    if (json == null) {
        return json;
    }
    return {
        
        'clientNumber': json['clientNumber'],
        'clientName': json['clientName'],
        'legalFirstName': json['legalFirstName'],
        'legalMiddleName': json['legalMiddleName'],
        'clientStatusCode': json['clientStatusCode'],
        'clientTypeCode': json['clientTypeCode'],
        'acronym': json['acronym'],
    };
}

export function SiteOperatorDtoToJSON(json: any): SiteOperatorDto {
    return SiteOperatorDtoToJSONTyped(json, false);
}

export function SiteOperatorDtoToJSONTyped(value?: SiteOperatorDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clientNumber': value['clientNumber'],
        'clientName': value['clientName'],
        'legalFirstName': value['legalFirstName'],
        'legalMiddleName': value['legalMiddleName'],
        'clientStatusCode': value['clientStatusCode'],
        'clientTypeCode': value['clientTypeCode'],
        'acronym': value['acronym'],
    };
}

