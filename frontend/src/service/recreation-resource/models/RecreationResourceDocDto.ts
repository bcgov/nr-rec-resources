/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RecreationResourceDocDto
 */
export interface RecreationResourceDocDto {
  /**
   * Reference ID for the image
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  ref_id: string;
  /**
   * Doc title
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  title: string;
  /**
   * doc link
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  url: string;
  /**
   * Document code that indicates the type of document
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  doc_code: RecreationResourceDocDtoDocCodeEnum;
  /**
   * Description of the document code
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  doc_code_description: string;
  /**
   * File extension
   * @type {string}
   * @memberof RecreationResourceDocDto
   */
  extension: string;
}

/**
 * @export
 */
export const RecreationResourceDocDtoDocCodeEnum = {
  Rm: 'RM',
} as const;
export type RecreationResourceDocDtoDocCodeEnum =
  (typeof RecreationResourceDocDtoDocCodeEnum)[keyof typeof RecreationResourceDocDtoDocCodeEnum];

/**
 * Check if a given object implements the RecreationResourceDocDto interface.
 */
export function instanceOfRecreationResourceDocDto(
  value: object,
): value is RecreationResourceDocDto {
  if (!('ref_id' in value) || value['ref_id'] === undefined) return false;
  if (!('title' in value) || value['title'] === undefined) return false;
  if (!('url' in value) || value['url'] === undefined) return false;
  if (!('doc_code' in value) || value['doc_code'] === undefined) return false;
  if (
    !('doc_code_description' in value) ||
    value['doc_code_description'] === undefined
  )
    return false;
  if (!('extension' in value) || value['extension'] === undefined) return false;
  return true;
}

export function RecreationResourceDocDtoFromJSON(
  json: any,
): RecreationResourceDocDto {
  return RecreationResourceDocDtoFromJSONTyped(json, false);
}

export function RecreationResourceDocDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RecreationResourceDocDto {
  if (json == null) {
    return json;
  }
  return {
    ref_id: json['ref_id'],
    title: json['title'],
    url: json['url'],
    doc_code: json['doc_code'],
    doc_code_description: json['doc_code_description'],
    extension: json['extension'],
  };
}

export function RecreationResourceDocDtoToJSON(
  json: any,
): RecreationResourceDocDto {
  return RecreationResourceDocDtoToJSONTyped(json, false);
}

export function RecreationResourceDocDtoToJSONTyped(
  value?: RecreationResourceDocDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ref_id: value['ref_id'],
    title: value['title'],
    url: value['url'],
    doc_code: value['doc_code'],
    doc_code_description: value['doc_code_description'],
    extension: value['extension'],
  };
}
