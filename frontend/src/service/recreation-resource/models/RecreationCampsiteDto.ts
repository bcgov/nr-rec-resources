/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RecreationCampsiteDto
 */
export interface RecreationCampsiteDto {
  /**
   * Unique identifier of the Recreation Resource linked to campsites
   * @type {string}
   * @memberof RecreationCampsiteDto
   */
  rec_resource_id: string;
  /**
   * Number of campsites available in the recreation site or trail
   * @type {number}
   * @memberof RecreationCampsiteDto
   */
  campsite_count: number;
}

/**
 * Check if a given object implements the RecreationCampsiteDto interface.
 */
export function instanceOfRecreationCampsiteDto(
  value: object,
): value is RecreationCampsiteDto {
  if (!('rec_resource_id' in value) || value['rec_resource_id'] === undefined)
    return false;
  if (!('campsite_count' in value) || value['campsite_count'] === undefined)
    return false;
  return true;
}

export function RecreationCampsiteDtoFromJSON(
  json: any,
): RecreationCampsiteDto {
  return RecreationCampsiteDtoFromJSONTyped(json, false);
}

export function RecreationCampsiteDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RecreationCampsiteDto {
  if (json == null) {
    return json;
  }
  return {
    rec_resource_id: json['rec_resource_id'],
    campsite_count: json['campsite_count'],
  };
}

export function RecreationCampsiteDtoToJSON(json: any): RecreationCampsiteDto {
  return RecreationCampsiteDtoToJSONTyped(json, false);
}

export function RecreationCampsiteDtoToJSONTyped(
  value?: RecreationCampsiteDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    rec_resource_id: value['rec_resource_id'],
    campsite_count: value['campsite_count'],
  };
}
