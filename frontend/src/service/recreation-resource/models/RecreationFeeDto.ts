/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RecreationFeeDto
 */
export interface RecreationFeeDto {
  /**
   * Amount charged for the recreation resource
   * @type {number}
   * @memberof RecreationFeeDto
   */
  fee_amount: number;

  /**
   * Description of the fee type
   * @type {string}
   * @memberof RecreationFeeDto
   */
  fee_description: string;
  /**
   * Start date for the fee applicability
   * @type {Date}
   * @memberof RecreationFeeDto
   */
  fee_start_date: Date;

  /**
   * End date for the fee applicability
   * @type {Date}
   * @memberof RecreationFeeDto
   */
  fee_end_date: Date;

  /**
   * Type of fee applicable (C - Camping, D - Day Use, H - Hut, P - Parking, T - Trail Use)
   * @type {string}
   * @memberof RecreationFeeDto
   */
  recreation_fee_code: string;

  /**
   * Indicates if the fee applies on Monday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  monday_ind: string;

  /**
   * Indicates if the fee applies on Tuesday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  tuesday_ind: string;

  /**
   * Indicates if the fee applies on Wednesday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  wednesday_ind: string;

  /**
   * Indicates if the fee applies on Thursday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  thursday_ind: string;

  /**
   * Indicates if the fee applies on Friday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  friday_ind: string;

  /**
   * Indicates if the fee applies on Saturday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  saturday_ind: string;

  /**
   * Indicates if the fee applies on Sunday
   * @type {string}
   * @memberof RecreationFeeDto
   */
  sunday_ind: string;

  /**
   * Optional description of the fee type
   * @type {string}
   * @memberof RecreationFeeDto
   */
  fee_description?: string;
}

/**
 * Check if a given object implements the RecreationFeeDto interface.
 */
export function instanceOfRecreationFeeDto(
  value: object,
): value is RecreationFeeDto {
  if (!('fee_amount' in value) || value['fee_amount'] === undefined)
    return false;
  if (!('fee_description' in value) || value['fee_description'] === undefined)
    return false;
  if (!('fee_start_date' in value) || value['fee_start_date'] === undefined)
    return false;
  if (!('fee_end_date' in value) || value['fee_end_date'] === undefined)
    return false;
  if (
    !('recreation_fee_code' in value) ||
    value['recreation_fee_code'] === undefined
  )
    return false;
  if (!('monday_ind' in value) || value['monday_ind'] === undefined)
    return false;
  if (!('tuesday_ind' in value) || value['tuesday_ind'] === undefined)
    return false;
  if (!('wednesday_ind' in value) || value['wednesday_ind'] === undefined)
    return false;
  if (!('thursday_ind' in value) || value['thursday_ind'] === undefined)
    return false;
  if (!('friday_ind' in value) || value['friday_ind'] === undefined)
    return false;
  if (!('saturday_ind' in value) || value['saturday_ind'] === undefined)
    return false;
  if (!('sunday_ind' in value) || value['sunday_ind'] === undefined)
    return false;
  return true;
}

export function RecreationFeeDtoFromJSON(json: any): RecreationFeeDto {
  return RecreationFeeDtoFromJSONTyped(json, false);
}

export function RecreationFeeDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RecreationFeeDto {
  if (json == null) {
    return json;
  }
  return {
    fee_amount: json['fee_amount'],
    fee_description: json['fee_description'],
    fee_start_date: new Date(json['fee_start_date']),
    fee_end_date: new Date(json['fee_end_date']),
    recreation_fee_code: json['recreation_fee_code'],
    monday_ind: json['monday_ind'],
    tuesday_ind: json['tuesday_ind'],
    wednesday_ind: json['wednesday_ind'],
    thursday_ind: json['thursday_ind'],
    friday_ind: json['friday_ind'],
    saturday_ind: json['saturday_ind'],
    sunday_ind: json['sunday_ind'],
  };
}

export function RecreationFeeDtoToJSON(json: any): RecreationFeeDto {
  return RecreationFeeDtoToJSONTyped(json, false);
}

export function RecreationFeeDtoToJSONTyped(
  value?: RecreationFeeDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    fee_amount: value['fee_amount'],
    fee_description: value['fee_description'],
    fee_start_date: value['fee_start_date'].toISOString(),
    fee_end_date: value['fee_end_date'].toISOString(),
    recreation_fee_code: value['recreation_fee_code'],
    monday_ind: value['monday_ind'],
    tuesday_ind: value['tuesday_ind'],
    wednesday_ind: value['wednesday_ind'],
    thursday_ind: value['thursday_ind'],
    friday_ind: value['friday_ind'],
    saturday_ind: value['saturday_ind'],
    sunday_ind: value['sunday_ind'],
  };
}
