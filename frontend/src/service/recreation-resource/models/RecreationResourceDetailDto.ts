/* tslint:disable */
/* eslint-disable */
/**
 * Recreation Sites and Trails BC API
 * RST API documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecreationCampsiteDto } from './RecreationCampsiteDto';
import {
  RecreationCampsiteDtoFromJSON,
  RecreationCampsiteDtoFromJSONTyped,
  RecreationCampsiteDtoToJSON,
  RecreationCampsiteDtoToJSONTyped,
} from './RecreationCampsiteDto';
import type { RecreationResourceDocDto } from './RecreationResourceDocDto';
import {
  RecreationResourceDocDtoFromJSON,
  RecreationResourceDocDtoFromJSONTyped,
  RecreationResourceDocDtoToJSON,
  RecreationResourceDocDtoToJSONTyped,
} from './RecreationResourceDocDto';
import type { RecreationResourceImageDto } from './RecreationResourceImageDto';
import {
  RecreationResourceImageDtoFromJSON,
  RecreationResourceImageDtoFromJSONTyped,
  RecreationResourceImageDtoToJSON,
  RecreationResourceImageDtoToJSONTyped,
} from './RecreationResourceImageDto';
import type { RecreationStructureDto } from './RecreationStructureDto';
import {
  RecreationStructureDtoFromJSON,
  RecreationStructureDtoFromJSONTyped,
  RecreationStructureDtoToJSON,
  RecreationStructureDtoToJSONTyped,
} from './RecreationStructureDto';
import type { RecreationStatusDto } from './RecreationStatusDto';
import {
  RecreationStatusDtoFromJSON,
  RecreationStatusDtoFromJSONTyped,
  RecreationStatusDtoToJSON,
  RecreationStatusDtoToJSONTyped,
} from './RecreationStatusDto';
import type { RecreationFeeDto } from './RecreationFeeDto';
import {
  RecreationFeeDtoFromJSON,
  RecreationFeeDtoFromJSONTyped,
  RecreationFeeDtoToJSON,
  RecreationFeeDtoToJSONTyped,
} from './RecreationFeeDto';
import type { RecreationActivityDto } from './RecreationActivityDto';
import {
  RecreationActivityDtoFromJSON,
  RecreationActivityDtoFromJSONTyped,
  RecreationActivityDtoToJSON,
  RecreationActivityDtoToJSONTyped,
} from './RecreationActivityDto';

/**
 *
 * @export
 * @interface RecreationResourceDetailDto
 */
export interface RecreationResourceDetailDto {
  /**
   * Unique identifier of the Recreation Resource
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  rec_resource_id: string;
  /**
   * Official name of the Recreation Resource
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  name: string;
  /**
   * Physical location of the Recreation Resource
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  closest_community: string;
  /**
   * List of recreational activities available at this resource
   * @type {Array<RecreationActivityDto>}
   * @memberof RecreationResourceDetailDto
   */
  recreation_activity: Array<RecreationActivityDto>;
  /**
   * Current operational status of the Recreation Resource
   * @type {RecreationStatusDto}
   * @memberof RecreationResourceDetailDto
   */
  recreation_status: RecreationStatusDto;
  /**
   * Code representing a specific feature associated with the recreation resource
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  rec_resource_type: string;
  /**
   * List of images for the recreation resource
   * @type {Array<RecreationResourceImageDto>}
   * @memberof RecreationResourceDetailDto
   */
  recreation_resource_images: Array<RecreationResourceImageDto>;
  /**
   * Detailed description of the Recreation Resource
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  description: string | null;
  /**
   * Number of campsites available in the recreation site or trail
   * @type {RecreationCampsiteDto}
   * @memberof RecreationResourceDetailDto
   */
  recreation_campsite: RecreationCampsiteDto;
  /**
   * List of fee details for the recreation resource (supports multiple fees with code 'C')
   * @type {Array<RecreationFeeDto>}
   * @memberof RecreationResourceDetailDto
   */
  recreation_fee: Array<RecreationFeeDto>;
  /**
   * Recreation Access Types
   * @type {Array<string>}
   * @memberof RecreationResourceDetailDto
   */
  recreation_access: Array<string>;
  /**
   * List of additional fees that do not fall under the main recreation fee category (non-'C' codes)
   * @type {Array<RecreationFeeDto>}
   * @memberof RecreationResourceDetailDto
   */
  additional_fees: Array<RecreationFeeDto>;
  /**
   * Structure-related facilities available at the recreation resource (e.g., toilets, tables)
   * @type {RecreationStructureDto}
   * @memberof RecreationResourceDetailDto
   */
  recreation_structure: RecreationStructureDto;
  /**
   * GeoJSON geometry data for the rec resource in string format
   * @type {Array<string>}
   * @memberof RecreationResourceDetailDto
   */
  spatial_feature_geometry?: Array<string>;
  /**
   * GeoJSON geometry data for the point location for the rec resource in string format
   * @type {string}
   * @memberof RecreationResourceDetailDto
   */
  site_point_geometry?: string;
  /**
   * List of documents for the recreation resource
   * @type {Array<RecreationResourceDocDto>}
   * @memberof RecreationResourceDetailDto
   */
  recreation_resource_docs?: Array<RecreationResourceDocDto>;
}

/**
 * Check if a given object implements the RecreationResourceDetailDto interface.
 */
export function instanceOfRecreationResourceDetailDto(
  value: object,
): value is RecreationResourceDetailDto {
  if (!('rec_resource_id' in value) || value['rec_resource_id'] === undefined)
    return false;
  if (!('name' in value) || value['name'] === undefined) return false;
  if (
    !('closest_community' in value) ||
    value['closest_community'] === undefined
  )
    return false;
  if (
    !('recreation_activity' in value) ||
    value['recreation_activity'] === undefined
  )
    return false;
  if (
    !('recreation_status' in value) ||
    value['recreation_status'] === undefined
  )
    return false;
  if (
    !('rec_resource_type' in value) ||
    value['rec_resource_type'] === undefined
  )
    return false;
  if (
    !('recreation_resource_images' in value) ||
    value['recreation_resource_images'] === undefined
  )
    return false;
  if (!('description' in value) || value['description'] === undefined)
    return false;
  if (
    !('recreation_campsite' in value) ||
    value['recreation_campsite'] === undefined
  )
    return false;
  if (!('recreation_fee' in value) || value['recreation_fee'] === undefined)
    return false;
  if (
    !('recreation_access' in value) ||
    value['recreation_access'] === undefined
  )
    return false;
  if (!('additional_fees' in value) || value['additional_fees'] === undefined)
    return false;
  if (
    !('recreation_structure' in value) ||
    value['recreation_structure'] === undefined
  )
    return false;
  return true;
}

export function RecreationResourceDetailDtoFromJSON(
  json: any,
): RecreationResourceDetailDto {
  return RecreationResourceDetailDtoFromJSONTyped(json, false);
}

export function RecreationResourceDetailDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RecreationResourceDetailDto {
  if (json == null) {
    return json;
  }
  return {
    rec_resource_id: json['rec_resource_id'],
    name: json['name'],
    closest_community: json['closest_community'],
    recreation_activity: (json['recreation_activity'] as Array<any>).map(
      RecreationActivityDtoFromJSON,
    ),
    recreation_status: RecreationStatusDtoFromJSON(json['recreation_status']),
    rec_resource_type: json['rec_resource_type'],
    recreation_resource_images: (
      json['recreation_resource_images'] as Array<any>
    ).map(RecreationResourceImageDtoFromJSON),
    description: json['description'],
    recreation_campsite: RecreationCampsiteDtoFromJSON(
      json['recreation_campsite'],
    ),
    recreation_fee: (json['recreation_fee'] as Array<any>).map(
      RecreationFeeDtoFromJSON,
    ),
    recreation_access: json['recreation_access'],
    additional_fees: (json['additional_fees'] as Array<any>).map(
      RecreationFeeDtoFromJSON,
    ),
    recreation_structure: RecreationStructureDtoFromJSON(
      json['recreation_structure'],
    ),
    spatial_feature_geometry:
      json['spatial_feature_geometry'] == null
        ? undefined
        : json['spatial_feature_geometry'],
    site_point_geometry:
      json['site_point_geometry'] == null
        ? undefined
        : json['site_point_geometry'],
    recreation_resource_docs:
      json['recreation_resource_docs'] == null
        ? undefined
        : (json['recreation_resource_docs'] as Array<any>).map(
            RecreationResourceDocDtoFromJSON,
          ),
  };
}

export function RecreationResourceDetailDtoToJSON(
  json: any,
): RecreationResourceDetailDto {
  return RecreationResourceDetailDtoToJSONTyped(json, false);
}

export function RecreationResourceDetailDtoToJSONTyped(
  value?: RecreationResourceDetailDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    rec_resource_id: value['rec_resource_id'],
    name: value['name'],
    closest_community: value['closest_community'],
    recreation_activity: (value['recreation_activity'] as Array<any>).map(
      RecreationActivityDtoToJSON,
    ),
    recreation_status: RecreationStatusDtoToJSON(value['recreation_status']),
    rec_resource_type: value['rec_resource_type'],
    recreation_resource_images: (
      value['recreation_resource_images'] as Array<any>
    ).map(RecreationResourceImageDtoToJSON),
    description: value['description'],
    recreation_campsite: RecreationCampsiteDtoToJSON(
      value['recreation_campsite'],
    ),
    recreation_fee: (value['recreation_fee'] as Array<any>).map(
      RecreationFeeDtoToJSON,
    ),
    recreation_access: value['recreation_access'],
    additional_fees: (value['additional_fees'] as Array<any>).map(
      RecreationFeeDtoToJSON,
    ),
    recreation_structure: RecreationStructureDtoToJSON(
      value['recreation_structure'],
    ),
    spatial_feature_geometry: value['spatial_feature_geometry'],
    site_point_geometry: value['site_point_geometry'],
    recreation_resource_docs:
      value['recreation_resource_docs'] == null
        ? undefined
        : (value['recreation_resource_docs'] as Array<any>).map(
            RecreationResourceDocDtoToJSON,
          ),
  };
}
